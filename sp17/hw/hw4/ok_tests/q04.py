test = {
  'name': 'Question 4',
  'points': 1,
  'suites': [
    {
      'cases': [
        {
          'code': r"""
          >>> student_answer_nolimit = connection.execute(query_q4[:query_q4.index("LIMIT")]).fetchall()
          >>> our_answer_nolimit = [('SOUTHERLAND FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('TEXANS FOR LAMAR SMITH', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('MEADOWS FOR CONGRESS', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('LUKE MESSER FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('DAN COATS FOR INDIANA', 'JEB 2016, INC.'),('MOOLENAAR FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('DAN COATS FOR INDIANA', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('LUKE MESSER FOR CONGRESS', 'JEB 2016, INC.'),('DREW FERGUSON FOR CONGRESS INC.', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('SCOTT RIGELL FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('MICHAEL BURGESS FOR CONGRESS', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('ISSA FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('MARIO DIAZ-BALART FOR CONGRESS', 'JEB 2016, INC.'),('SCALISE FOR CONGRESS', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('FRANCIS FOR CONGRESS', 'JEB 2016, INC.'),('TOM ROONEY FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('MCCLINTOCK FOR CONGRESS', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('KINZINGER FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('POMPEO FOR KANSAS, INC.', 'MARCO RUBIO FOR PRESIDENT'),('RIBBLE FOR CONGRESS', 'JEB 2016, INC.'),('HELLERHIGHWATER PAC', 'MARCO RUBIO FOR PRESIDENT'),('HELLERHIGHWATER PAC', 'JEB 2016, INC.'),('AUSTIN SCOTT FOR CONGRESS INC', 'MARCO RUBIO FOR PRESIDENT'),('AUSTIN SCOTT FOR CONGRESS INC', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('LLANO TEA PARTY', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('FRIENDS OF MIKE H', 'MARCO RUBIO FOR PRESIDENT'),('FRIENDS OF GEORGE LEMIEUX', 'JEB 2016, INC.'),('GARY PALMER FOR CONGRESS', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('GORELL FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('FRIENDS OF PAUL MITCHELL', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('RESTORING AMERICAN LEADERSHIP PAC', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('REPUBLICAN NATIONAL COMMITTEE', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('FRANK DRAKE FOR CONGRESS CAMPAIGN COMMITTEE', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('KANSAS REPUBLICAN PARTY', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('INDIANA REPUBLICAN STATE COMMITTEE, INC.', 'MARCO RUBIO FOR PRESIDENT'),('INDIANA REPUBLICAN STATE COMMITTEE, INC.', 'CARSON AMERICA'),('INDIANA REPUBLICAN STATE COMMITTEE, INC.', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('REPUBLICAN FEDERAL COMMITTEE OF PENNSYLVANIA', 'DONALD J. TRUMP FOR PRESIDENT, INC.'),('GALLEGLY FOR CONGRESS', 'MARCO RUBIO FOR PRESIDENT'),('FRIENDS OF JIM INHOFE', 'MARCO RUBIO FOR PRESIDENT'),('CHAMBLISS FOR SENATE', 'MARCO RUBIO FOR PRESIDENT'),('CHAMBLISS FOR SENATE', 'JEB 2016, INC.'),('DEFEND AMERICA PAC', 'MARCO RUBIO FOR PRESIDENT')]
          >>> # Test that set of all rows is same between our answer and student's
          >>> all([row in our_answer_nolimit for row in student_answer_nolimit])
          True     
          >>> all([row in student_answer_nolimit for row in our_answer_nolimit])
          True     
                      """,
          'hidden': False,
          'locked': False
        },
      ],
      'scored': True,
      'setup': '',
      'teardown': '',
      'type': 'doctest'
    }
  ]
}
